select top 2 EmployeeId "Id", FirstName
	, LastName, Title
from Employee
where title is not null
for xml auto, root('Employees')

---------Ids inserted from XML docu,\ment-------
declare @xml nvarchar(max) = '
<Employees>
  <Employee Id="400" FirstName="Margaret" LastName="Park" Title="Sales Support Agent" />
  <Employee Id="500" FirstName="Steve" LastName="Johnson" Title="Sales Support Agent" />
</Employees>'

declare @DocHandle int
exec sp_xml_preparedocument @DocHandle OUT, @xml

set IDENTITY_INSERT employee on
insert into Employee (EmployeeId, FirstName, LastName, Title) 
output inserted.*
select Id, fn, ln,title
from openxml(@DocHandle, N'/Employees/Employee', 1)
with(
	Id int,
	fn nvarchar(200) '@FirstName',
	ln nvarchar(200) '@LastName',
	Title nvarchar(30)
)
set IDENTITY_INSERT employee off
exec sp_xml_removedocument @DocHandle 

----------Ids generated by identity ----------
----------------
declare @xml nvarchar(max) = '
<Employees>
  <Employee Id="400" FirstName="Margaret" LastName="Park" Title="Sales Support Agent" />
  <Employee Id="500" FirstName="Steve" LastName="Johnson" Title="Sales Support Agent" />
</Employees>'

go
create or alter procedure udpEmployeeImportFromXml(@xml nvarchar(max))
as
begin
declare @DocHandle int
	exec sp_xml_preparedocument @DocHandle OUT, @xml

	insert into Employee (FirstName, LastName, Title) 
	output inserted.*
	select fn, ln,title
	from openxml(@DocHandle, N'/Employees/Employee', 1)
	with(
		Id int,
		fn nvarchar(200) '@FirstName',
		ln nvarchar(200) '@LastName',
		Title nvarchar(30)
	)
	exec sp_xml_removedocument @DocHandle 
end
go
---- test procedure ---
exec udpEmployeeImportFromXml '<Employees>
  <Employee Id="400" FirstName="Margaret" LastName="Park" Title="Sales Support Agent" />
  <Employee Id="500" FirstName="Steve" LastName="Johnson" Title="Sales Support Agent" />
</Employees>'

-------- JSON -------
select top 2 EmployeeId "Id", FirstName
	, LastName, Title
from Employee
where title is not null
for json path, root('Employees')

---- import from JSON
declare @json nvarchar(max) = '{"Employees":[{"Id":4,"FirstName":"Margaret","LastName":"Park","Title":"Sales Support Agent"},{"Id":5,"FirstName":"Steve","LastName":"Johnson","Title":"Sales Support Agent"}]}'
go
create or alter procedure udpEmployeesImportFromJson(@json nvarchar(max))
as
begin
	insert into Employee (FirstName, LastName, Title) 
	output inserted.*
	select Fn, LastName, Title
	from openjson(@json, N'$.Employees')
	with(
	  Id int,
	  fn nvarchar(200) '$.FirstName',
	  LastName nvarchar(200),
	  Title nvarchar(30)
	)
end
--- test
go
exec udpEmployeesImportFromJson '{"Employees":[{"Id":4,"FirstName":"Margaret","LastName":"Park","Title":"Sales Support Agent"},{"Id":5,"FirstName":"Steve","LastName":"Johnson","Title":"Sales Support Agent"}]}'