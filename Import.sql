select top 5 clients.Id, FirstName, LastName, PhoneNumber, address.Id, address.City, address.Street, address.HomeNumber, address.ClientId
from Client as clients, ClientAddress as address 
where address.ClientId = clients.Id
for xml auto, root('Clients')

----------Ids generated by identity ----------
declare @xml nvarchar(max) = '
<Clients>
  <clients Id="7" FirstName="Calamity" LastName="Janet" PhoneNumber="+44201234567">
    <address Id="8" City="Tashkent" Street="Shakhrisabz str" HomeNumber="13" ClientId="7" />
    <address Id="9" City="Tashkent" Street="Amir Temur str" HomeNumber="14" ClientId="7" />
  </clients>
  <clients Id="8" FirstName="Billy" LastName="Joel" PhoneNumber="+44201234567">
    <address Id="10" City="Tashkent" Street="Istiqbol" HomeNumber="15" ClientId="8" />
  </clients>
  <clients Id="9" FirstName="Kit" LastName="Carson" PhoneNumber="+44201234567">
    <address Id="11" City="Tashkent" Street="Taras Shevchenko str" HomeNumber="16" ClientId="9" />
  </clients>
</Clients>'

go
create or alter procedure udpImportFromXml(@xml nvarchar(max))
as
begin
declare @DocHandle int
	exec sp_xml_preparedocument @DocHandle OUT, @xml

    set IDENTITY_INSERT Client on
	insert into Client(Id, FirstName, LastName, PhoneNumber) 
	output inserted.*
	select id, fn, ln, ph
	from openxml(@DocHandle, N'/Clients/clients', 1)
	with(
		Id int,
		fn nvarchar(200) '@FirstName',
		ln nvarchar(200) '@LastName',
        ph nvarchar(200) '@PhoneNumber'
	)
    set IDENTITY_INSERT Client off

    set IDENTITY_INSERT ClientAddress on
	insert into ClientAddress(Id, City, Street, HomeNumber, ClientId)
	output inserted.*
	select id, ct, strt, hmnum, clntId
	from openxml(@DocHandle, N'/Clients/clients/address/', 1)
	with(
		Id int, 
		ct nvarchar(200) '@City',
		strt nvarchar(200) '@Street',
		hmnum nvarchar(200) '@HomeNumber',
		clntId int '@ClientId'
	)

	exec sp_xml_removedocument @DocHandle 
end
go
---- test procedure ---
exec udpImportFromXml '
<Clients>
  <clients Id="7" FirstName="Calamity" LastName="Janet" PhoneNumber="+44201234567">
    <address Id="8" City="Tashkent" Street="Shakhrisabz str" HomeNumber="13" ClientId="7" />
    <address Id="9" City="Tashkent" Street="Amir Temur str" HomeNumber="14" ClientId="7" />
  </clients>
  <clients Id="8" FirstName="Billy" LastName="Joel" PhoneNumber="+44201234567">
    <address Id="10" City="Tashkent" Street="Istiqbol" HomeNumber="15" ClientId="8" />
  </clients>
  <clients Id="9" FirstName="Kit" LastName="Carson" PhoneNumber="+44201234567">
    <address Id="11" City="Tashkent" Street="Taras Shevchenko str" HomeNumber="16" ClientId="9" />
  </clients>
</Clients>'

-------- JSON -------
select top 5 clients.Id "ClientId", FirstName, LastName, address.Id "AddressId", address.City, address.Street, address.HomeNumber, address.ClientId "ClientAddressId"
from Client as clients, ClientAddress as address 
where address.ClientId = clients.Id
for json path, root('Clients')

---- import from JSON
declare @json nvarchar(max) = '{
  "Clients": [
    {
      "ClientId": 10,
      "FirstName": "Stephen",
      "LastName": "King",
      "PhoneNumber": "+0204679854",
      "AddressId": 8,
      "City": "Tashkent",
      "Street": "Istiqlol str",
      "HomeNumber": "69",
      "ClientAddressId": 10
    },
    {
      "ClientId": 11,
      "FirstName": "Kalimba",
      "LastName": "Janetta",
      "PhoneNumber": "+0204679854",
      "AddressId": 9,
      "City": "Tashkent",
      "Street": "Shakhrisabz str",
      "HomeNumber": "13",
      "ClientAddressId": 11
    },
    {
      "ClientId": 12,
      "FirstName": "Calamity",
      "LastName": "Janet",
      "PhoneNumber": "+0204999854",
      "AddressId": 10,
      "City": "Tashkent",
      "Street": "Amir Temur str",
      "HomeNumber": "33",
      "ClientAddressId": 12
    },
    {
      "ClientId": 13,
      "FirstName": "Billy",
      "LastName": "Joel",
      "PhoneNumber": "+0207779854",
      "AddressId": 11,
      "City": "Tashkent",
      "Street": "Istiqbol",
      "HomeNumber": "15",
      "ClientAddressId": 13
    },
    {
      "ClientId": 14,
      "FirstName": "Kitен",
      "LastName": "Corson",
      "PhoneNumber": "+0204679855",
      "AddressId": 12,
      "City": "Tashkent",
      "Street": "Taras Shevchenko str",
      "HomeNumber": "66",
      "ClientAddressId": 14
    }
  ]
}'
go
create or alter procedure udpImportFromJson(@json nvarchar(max))
as
begin
    set IDENTITY_INSERT Client on
	insert into Client(Id, FirstName, LastName, PhoneNumber) 
	output inserted.*
	select Id, Fn, Ln, Pn
	from openjson(@json, N'$.Clients')
	with(
	  Id int '$.ClientId',
	  Fn nvarchar(200) '$.FirstName',
	  Ln nvarchar(200) '$.LastName',
	  Pn nvarchar(200) '$.PhoneNumber'
	)
    set IDENTITY_INSERT Client off

    set IDENTITY_INSERT ClientAddress on
    insert into ClientAddress(Id, City, Street, HomeNumber, ClientId)
    output inserted.*
	select Id, City, Street, HomeNumber, ClientId
	from openjson(@json, N'$.Clients')
	with(
	  Id int '$.AddressId',
	  City nvarchar(200) '$.City',
	  Street nvarchar(200) '$.Street',
	  HomeNumber nvarchar(200) '$.HomeNumber',
      ClientId int '$.ClientAddressId'
	)
end
--- test
go
exec udpImportFromJson '{
  "Clients": [
    {
      "ClientId": 10,
      "FirstName": "Stephen",
      "LastName": "King",
      "PhoneNumber": "+0204679854",
      "AddressId": 8,
      "City": "Tashkent",
      "Street": "Istiqlol str",
      "HomeNumber": "69",
      "ClientAddressId": 10
    },
    {
      "ClientId": 11,
      "FirstName": "Kalimba",
      "LastName": "Janetta",
      "PhoneNumber": "+0204679854",
      "AddressId": 9,
      "City": "Tashkent",
      "Street": "Shakhrisabz str",
      "HomeNumber": "13",
      "ClientAddressId": 11
    },
    {
      "ClientId": 12,
      "FirstName": "Calamity",
      "LastName": "Janet",
      "PhoneNumber": "+0204999854",
      "AddressId": 10,
      "City": "Tashkent",
      "Street": "Amir Temur str",
      "HomeNumber": "33",
      "ClientAddressId": 12
    },
    {
      "ClientId": 13,
      "FirstName": "Billy",
      "LastName": "Joel",
      "PhoneNumber": "+0207779854",
      "AddressId": 11,
      "City": "Tashkent",
      "Street": "Istiqbol",
      "HomeNumber": "15",
      "ClientAddressId": 13
    },
    {
      "ClientId": 14,
      "FirstName": "Kitен",
      "LastName": "Corson",
      "PhoneNumber": "+0204679855",
      "AddressId": 12,
      "City": "Tashkent",
      "Street": "Taras Shevchenko str",
      "HomeNumber": "66",
      "ClientAddressId": 14
    }
  ]
}'