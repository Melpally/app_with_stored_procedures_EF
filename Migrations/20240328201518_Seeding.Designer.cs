// <auto-generated />
using System;
using DBSD.CW2._13768._14055._13287.DAL.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBSD.CW2._13768._14055._13287.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240328201518_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Butch",
                            LastName = "Cassidy",
                            PhoneNumber = "+998901235678"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Calamity",
                            LastName = "Janet",
                            PhoneNumber = "+998901235678"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Billy",
                            LastName = "Joel",
                            PhoneNumber = "+998901235678"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Kit",
                            LastName = "Carson",
                            PhoneNumber = "+998901235678"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Helga",
                            LastName = "Storm",
                            PhoneNumber = "+998901235678"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Rose",
                            LastName = "Doolan",
                            PhoneNumber = "+998901235678"
                        });
                });

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.ClientAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("HomeNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAddress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Tashkent",
                            ClientId = 1,
                            HomeNumber = "12",
                            Street = "Istiqbol str"
                        },
                        new
                        {
                            Id = 2,
                            City = "Tashkent",
                            ClientId = 2,
                            HomeNumber = "13",
                            Street = "Shakhrisabz str"
                        },
                        new
                        {
                            Id = 3,
                            City = "Tashkent",
                            ClientId = 2,
                            HomeNumber = "14",
                            Street = "Amir Temur str"
                        },
                        new
                        {
                            Id = 4,
                            City = "Tashkent",
                            ClientId = 3,
                            HomeNumber = "15",
                            Street = "Istiqbol"
                        },
                        new
                        {
                            Id = 5,
                            City = "Tashkent",
                            ClientId = 4,
                            HomeNumber = "16",
                            Street = "Taras Shevchenko str"
                        },
                        new
                        {
                            Id = 6,
                            City = "Tashkent",
                            ClientId = 5,
                            HomeNumber = "17",
                            Street = "Shastri str"
                        },
                        new
                        {
                            Id = 7,
                            City = "Tashkent",
                            ClientId = 6,
                            HomeNumber = "18",
                            Street = "Oybek str"
                        });
                });

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("HasDrivingLicense")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TGUserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Courier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(1990, 12, 1),
                            City = "Tashkent",
                            FirstName = "Avaz",
                            HasDrivingLicense = false,
                            LastName = "Khalikov",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@avaz_IT"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateOnly(1999, 11, 11),
                            City = "Tashkent",
                            FirstName = "Jane",
                            HasDrivingLicense = true,
                            LastName = "Doe",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@janedoe"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateOnly(1980, 2, 1),
                            City = "Samarkand",
                            FirstName = "John",
                            HasDrivingLicense = false,
                            LastName = "Doe",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@johndoe"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateOnly(1978, 5, 13),
                            City = "Tashkent",
                            FirstName = "Rupert",
                            HasDrivingLicense = true,
                            LastName = "Kovalsky",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@ruppy"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateOnly(1990, 12, 1),
                            City = "Samarkand",
                            FirstName = "Hariette",
                            HasDrivingLicense = false,
                            LastName = "Willey",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@hanriette"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateOnly(2000, 12, 21),
                            City = "Tashkent",
                            FirstName = "Richard",
                            HasDrivingLicense = true,
                            LastName = "Willey",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@richwill"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateOnly(2004, 3, 22),
                            City = "London",
                            FirstName = "Gladys",
                            HasDrivingLicense = false,
                            LastName = "Foster",
                            PhoneNumber = "+998991234567",
                            ProfilePicture = new byte[0],
                            TGUserName = "@ineedpigden"
                        });
                });

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CourierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CourierId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.ClientAddress", b =>
                {
                    b.HasOne("DBSD.CW2._13768._14055._13287.DAL.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DBSD.CW2._13768._14055._13287.DAL.Models.Order", b =>
                {
                    b.HasOne("DBSD.CW2._13768._14055._13287.DAL.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBSD.CW2._13768._14055._13287.DAL.Models.Courier", null)
                        .WithMany()
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
